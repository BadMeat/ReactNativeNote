createdAt: "2020-04-17T13:13:20.709Z"
updatedAt: "2020-04-17T13:18:24.634Z"
type: "MARKDOWN_NOTE"
folder: "67fb8d4c05bf1c0bf02d"
title: "`js"
tags: []
content: '''
  ```js
  import React, { Component } from 'react'
  import { View, Text as TXT, ScrollView } from 'react-native'
  import AnggaranBarHorizontalChart from './chart/AnggaranBarHorizontalChart'
  import Titlebar from './common/Titlebar'
  import AnggaranLineFillChart from './chart/AnggaranLineFillChart'
  import {
      prevData, currData, information, sizeHeight, yearPrev, yearCurr, maxData,
      prevDataKl, currDataKl, informationKl, sizeHeightKl, yearPrevKl, yearCurrKl, maxDataKl
  
  } from '../data/AnggaranData'
  ```
  
  ```js
  <View style={{ alignItems: 'center', marginTop: 20 }}>
                      <TXT style={{ paddingStart: 20, fontFamily: 'TrebuchetMS', }}>Anggaran per Sektor (triliun rupiah)</TXT>
                  </View>
                  <AnggaranBarHorizontalChart
                      prevData={prevData} currData={currData} information={information} sizeHeight={sizeHeight}
                      yearPrev={yearPrev} yearCurr={yearCurr} maxData={maxData} type='Horizontal'
                      colorStartTop='rgb(255, 255, 255)' colorEndTop='rgb(199, 24, 12)' colorStartBottom='rgb(255, 255, 255)'
                      colorEndBottom='#0713ba' bottomGradientColorTop='rgb(148, 19, 10)' bottomGradientColorBottom='#0713ba' />
  ```
  
  ```js
  import React, { Component } from 'react'
  import { View, Text as TXT } from 'react-native'
  import { BarChart, YAxis } from 'react-native-svg-charts'
  import * as scale from 'd3-scale'
  import { Text, LinearGradient } from 'react-native-svg'
  import Svg from 'react-native-svg'
  import { Line } from 'react-native-svg'
  import { Defs } from 'react-native-svg'
  import { Stop } from 'react-native-svg'
  
  export default class AnggaranBarHorizontalChart extends Component {
  
      DATA_DASH = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1]
  
  
      renderText = (DATA, keterangan) => {
  
          let item = []
  
          DATA.map((_, index) => (
              item.push(
                  <TXT key={index} style={{ marginTop: 5, fontSize: 7, fontWeight: 'bold', flex: 1, textAlign: 'right' }}>
                      {keterangan[index]}
                  </TXT>
              )
          ))
          return item
      }
  
  
  
      render() {
  
          const {
              prevData, currData, information, sizeHeight, yearPrev,
              yearCurr, maxData, colorStartTop, colorEndTop, colorStartBottom,
              colorEndBottom, type, bottomGradientColorTop, bottomGradientColorBottom } = this.props
  
          const GradientHorizontal = (color) => {
              if (type === 'Vertical') {
                  return <LinearGradient id={'gradient'} x1={'0%'} y={'0%'} x2={'0%'} y2={'100%'}>
                      <Stop offset={'90%'} stopColor={color.startColor} />
                      <Stop offset={'50%'} stopColor={color.endColor} />
                  </LinearGradient>
              }
              return <LinearGradient id={'gradient'} x1={'0'} y={'0%'} x2={'100%'} y2={'0%'}>
                  <Stop offset={'0%'} stopColor={color.startColor} />
                  <Stop offset={'50%'} stopColor={color.endColor} />
              </LinearGradient>
          }
  
          const GradientRed = () => (
              <Defs key={'gradient'}>
                  <GradientHorizontal startColor={colorStartTop} endColor={colorEndTop} />
              </Defs>
          )
  
          const GradientBlue = () => (
              <Defs key={'gradient'}>
                  <GradientHorizontal startColor={colorStartBottom} endColor={colorEndBottom} />
              </Defs>
          )
  
          const LabelsTop = ({ x, y, bandwidth, data }) => (
              data.map((value, index) =>
                  (
                      <Text
                          key={index}
                          x={x(value) + 10}
                          y={y(index) + (bandwidth / 2)}
                          fontSize={8}
                          fontWeight={'bold'}
                          fill={'black'}
                          alignmentBaseline={'middle'}
                      >
                          {value}
                      </Text>
                  )
              )
          )
  
          const LabelsBottom = ({ x, y, bandwidth, data }) => (
              data.map((value, index) =>
                  (
                      <Text
                          key={index}
                          x={x(value) + 10}
                          y={y(index) + (bandwidth / 2) + 2}
                          fontSize={8}
                          fontWeight={'bold'}
                          fill={'black'}
                          alignmentBaseline={'middle'}
                      >
                          {value}
                      </Text>
                  )
              )
          )
  
          return (
              <View style={{ flexDirection: 'row', height: sizeHeight, padding: 16, margin: 10 }}>
                  <View style={{ height: sizeHeight - 40, alignItems: 'flex-end', marginStart: 0, width: 50, top: 3 }}>
                      {
                          this.renderText(prevData, information)
                      }
                  </View>
                  <YAxis
                      data={this.DATA_DASH}
                      style={{ height: sizeHeight - 45, width: 34 }}
                      yAccessor={({ index }) => index}
                      scale={scale.scaleTime}
                      contentInset={{ top: 2, bottom: 0 }}
                      spacing={0.1}
                      svg={{ fill: 'rgba(0, 0, 0, 0.8)' }}
                      formatLabel={(_, index) => '-'}
                  ></YAxis>
                  <Svg height="510" width="1" left={-16}>
                      <Line x1="0" y1="1" x2="0" y2={sizeHeight - 45} stroke="black" strokeWidth="2" />
                  </Svg>
  
  
                  {/* Bottom Bar */}
  
                  <View style={{ position: 'absolute', left: 77.5, right: 30, top: 28, height: sizeHeight - 38 }}>
                      <BarChart
                          style={{ flex: 1, paddingLeft: 8 }}
                          data={currData}
                          spacingInner={0.7}
                          horizontal={true}
                          yMax={maxData}
                          strokeWidth={5}
                          svg={{ fill: bottomGradientColorBottom }}
                          contentInset={{ top: 2, bottom: 19.5 }}
                          spacing={0.2}
                          gridMin={0}
                      >
                      </BarChart>
                  </View>
  
                  <View style={{ position: 'absolute', left: 77.5, right: 30, top: 26, height: sizeHeight - 40 }}>
                      <BarChart
                          style={{ flex: 1, paddingLeft: 8 }}
                          data={currData}
                          spacingInner={0.7}
                          horizontal={true}
                          yMax={maxData}
                          strokeWidth={5}
                          svg={{ fill: 'url(#gradient)' }}
                          contentInset={{ top: 2, bottom: 17.5 }}
                          spacing={0.2}
                          gridMin={0}
                      >
                          <GradientBlue />
                          <LabelsBottom />
                      </BarChart>
                  </View>
  
                  {/* Top Bar */}
                  <View style={{ position: 'absolute', left: 77.5, right: 30, top: 12, height: sizeHeight - 40 }}>
                      <BarChart
                          style={{ flex: 1, paddingLeft: 8 }}
                          data={prevData}
                          yMax={maxData}
                          spacingInner={0.7}
                          horizontal={true}
                          svg={{ fill: bottomGradientColorTop }}
                          contentInset={{ top: 10, bottom: 10 }}
                          spacing={0.2}
                          gridMin={0}
                      >
                      </BarChart>
                  </View>
                  <View style={{ position: 'absolute', left: 77.5, right: 30, top: 10, height: sizeHeight - 40 }}>
                      <BarChart
                          style={{ flex: 1, paddingLeft: 8 }}
                          data={prevData}
                          yMax={maxData}
                          spacingInner={0.7}
                          horizontal={true}
                          svg={{ fill: 'url(#gradient)' }}
                          contentInset={{ top: 10, bottom: 10 }}
                          spacing={0.2}
                          gridMin={0}
                      >
                          <GradientRed />
                          <LabelsTop />
                      </BarChart>
                  </View>
  
                  <View style={{ position: 'absolute', width: 30, right: 30, height: sizeHeight - 60, top: 10, justifyContent: 'flex-end' }}>
                      <TXT style={{ backgroundColor: colorEndTop, padding: 2, textAlign: 'center', fontSize: 10 }}>{yearPrev}</TXT>
                      <View style={{ backgroundColor: bottomGradientColorTop, height: 2 }} />
                  </View>
                  <View style={{ position: 'absolute', width: 30, right: 30, height: sizeHeight - 40, top: 10, justifyContent: 'flex-end' }}>
                      <TXT style={{ backgroundColor: colorEndBottom, padding: 2, textAlign: 'center', fontSize: 10 }}>{yearCurr}</TXT>
                      <View style={{ backgroundColor: bottomGradientColorBottom, height: 2 }} />
                  </View>
              </View >
          )
      }
  }
  
  ```
'''
linesHighlighted: []
isStarred: false
isTrashed: false
